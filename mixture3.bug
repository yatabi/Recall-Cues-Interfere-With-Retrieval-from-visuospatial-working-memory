# Hierarchical 2x2 mixture model
model{
    
  for(i in 1:N){
        x[i]          ~ dvonmises(mn[i], z[i]* prec_i[i])    	
    	postpred[i]   ~ dvonmises(mn[i],       prec_i[i])
    	loglik[i] <- dlogvonmises(x[i], mn[i], prec_i[i])
    	mn[i]     <- m[i, item[i]]
		item[i] ~ dcat(Pitem[i,1:setsize[i]])            #samples item that memory response comes from
        # Pitem is the probability of reporting the target or 2 nontargets. 
        # this gets modified on circle trials, increasing Ptarget and decreasing Pnotarget. 

        pitem_i[i,1:setsize[i]] <- Pitem[i,1:setsize[i]] 
        # effect of condition on probability of choosing target
        # precision on each trial is the gamma-sampled precision for this subject, plus 
        # some effect of the circle/mask
        prec_i[i] <- z[i] * ( precision[id[i]])
		z[i]    ~ dbern( pm[id[i]] ) # are we reporting from memory?

  }
for (j in 1:nsubj)  {

  # subject level probabilities for choosing item in memory
  # drawn from beta distribution around Pmem
  pm[j]      ~ dbeta(PmA, PmB)T(0.001, 0.999)   #probability that response comes from memory (any item)


  # subject level Ptarget drawn from beta distribution around Ptarget
  pt[j] ~ dbeta(PtA, PtB)T(0.001, 0.999)   #probability that response comes from target, given it comes from memory


  precision[j] ~ dgamma(Pshape, Prate)
}
# Pitem [ subject, targ/nontarg/notarg ]
for (i in 1:N){
  Pitem[i,1] <- pt[id[i]]              #conditional P(target), given response comes from memory
  for (k in 2:setsize[i]) {
	  Pitem[i,k] <- (1-pt[id[i]])/(setsize[i]-1)  #conditional P(recall item k), given response from memory
  }
} 
	# Priors
  
  PmA <- 0.0000000001           # sample Odds ratio for choosing 'from memory'
  PmB <- 0.9999999999            #  OR 'not from memory' 
  Pmem <- PmA/(PmA + PmB)    # Pm estimate on group level (to be monitored)

  PtA ~ dexp(0.1)            # sample from exponential distribution, odds of choosing target given in mem
  PtB ~ dexp(0.1)           # odds of choosing nontarget given in memory
  Ptarget  <- PtA/(PtA + PtB)    # Pt estimate on group level (to be monitored)

  # convert mean / sd into gamma shape/rate 
  Pshape   <- (Mprecision^2)/(SDPrecision^2) 
  Prate    <-  Mprecision   /(SDPrecision^2)
  Mprecision  ~ dexp(0.1)
  SDPrecision ~ dexp(0.1)        # allow precision to vary according to gamma distribution

 
	
}
